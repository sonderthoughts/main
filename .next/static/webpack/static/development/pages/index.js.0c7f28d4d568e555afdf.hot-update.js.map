{"version":3,"file":"static/webpack/static/development/pages/index.js.0c7f28d4d568e555afdf.hot-update.js","sources":["webpack:///./components/feed.js"],"sourcesContent":["import React from 'react';\nimport { Flex, Box, Card, Button, Image } from 'rebass';\nimport PropTypes from 'prop-types';\nimport { User } from 'radiks';\n\nimport Text from '../styled/typography';\nimport Input from '../styled/input';\nimport Message from '../models/Message';\n\nexport default class Feed extends React.Component {\n  static propTypes = {\n    messages: PropTypes.array,\n  }\n\n  static defaultProps = {\n    messages: [],\n  }\n\n  state = {\n    newMessage: '',\n    createdMessageIDs: {},\n    messages: [],\n    currentUser: null,\n  }\n\n  componentWillMount() {\n    const rawMessages = this.props.messages;\n    const messages = rawMessages.map(messageData => new Message(messageData.attrs));\n    this.setState({ messages });\n  }\n\n  componentDidMount() {\n    this.setState({\n      currentUser: User.currentUser(),\n    });\n    Message.addStreamListener(this.newMessageListener.bind(this));\n\n  }\n\n  async submit() {\n  const { newMessage } = this.state;\n  const message = new Message({\n    content: newMessage,\n    createdBy: this.state.currentUser._id,\n  });\n  const { messages, createdMessageIDs } = this.state;\n  messages.unshift(message);\n  createdMessageIDs[message._id] = true;\n  this.setState({ messages, createdMessageIDs, newMessage: '' });\n  await message.save();\n  }\n\n  newMessageListener(message) {\n  const { messages } = this.state;\n  if (!this.state.createdMessageIDs[message._id]) {\n    messages.unshift(message);\n    this.setState({ messages });\n  }\n}\n\n  messages() {\n    return this.state.messages.map(message => (\n      <Card\n        fontSize={6}\n        fontWeight='bold'\n        p={5}\n        my={5}\n        bg='#d6ead4'\n        borderRadius={8}\n        boxShadow='0 2px 16px rgba(0, 0, 0, 0.25)'\n      >\n        <div key={message._id}>\n          <Text.em>{message.attrs.content}</Text.em>\n        </div>\n      </Card>\n    ));\n  }\n\n  render() {\n    return (\n      <Flex>\n        <Box width={[1, 1 / 2]} mx=\"auto\" textAlign=\"center\">\n          <Input\n            mt={3}\n            width={1}\n            placeholder=\" \"\n            value={this.state.newMessage}\n            onChange={evt => this.setState({ newMessage: evt.target.value })}\n          />\n\n          <Flex justifyContent=\"center\">\n            <Button bg=\"#00738c\" onClick={() => this.submit()} mt={2}>\n              Confess Your Love\n            </Button>\n          </Flex>\n\n          {this.messages()}\n\n          <Text.p textAlign=\"center\">\n            Only showing the most recent\n            {' '}\n            {this.state.messages.length}\n            {' '}\n            messages.\n          </Text.p>\n        </Box>\n      </Flex>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AAJA;AACA;;;;;;AAMA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;AAEA;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAVA;AAeA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAUA;;;;AAnGA;AACA;AADA;AAEA;AADA;AACA;AAFA;AAMA;AADA;AACA;;;;;A","sourceRoot":""}