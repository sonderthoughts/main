{"version":3,"file":"static/webpack/static/development/pages/_app.js.3027e07afb5533f05a8e.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import App, { Container } from 'next/app';\nimport React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { UserSession, AppConfig } from 'blockstack';\nimport { configure } from 'radiks';\n\nconst appConfig = new AppConfig(['store_write', 'publish_data'], 'http://localhost:5000');\nconst userSession = new UserSession({ appConfig });\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {\n      userSession,\n    };\n\n    configure({\n      apiServer: process.env.RADIKS_API_SERVER,\n      userSession,\n    });\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return { pageProps };\n  }\n\n  componentWillMount() {\n  configure({\n  apiServer: process.env.RADIKS_API_SERVER,\n  userSession,\n});\n  }\n\n  render() {\n    const {\n      Component, pageProps,\n    } = this.props;\n\n    return (\n      <ThemeProvider theme={{}}>\n        <Container>\n          <Component {...pageProps} serverCookies={this.props.cookies} />\n        </Container>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default MyApp;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAEA;AAAA;AAIA;;;;;;;;;;;;AAnCA;AACA;AACA;AADA;AAIA;AACA;AACA;AAFA;AACA;AAGA;;;;;;AACA;AACA;;AADA;AACA;;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAfA;AACA;AAsCA;;;;A","sourceRoot":""}